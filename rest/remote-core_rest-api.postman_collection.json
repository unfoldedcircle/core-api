{
	"info": {
		"_postman_id": "67fe9789-d645-4a16-9336-2f90e9294fa7",
		"name": "Remote Two Core-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9323728"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/pub/version",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"pub",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/pub/status",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"pub",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "health check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/pub/health_check",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"pub",
								"health_check"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Session cookie is returned\", function () {",
									"    pm.expect(pm.cookies.has('id')).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"web-configurator\",\n    \"password\": \"{{apiPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/pub/login",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"pub",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/pub/logout",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"pub",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth/scopes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/scopes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"scopes"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "auth/api_keys",
			"item": [
				{
					"name": "createApiKey: invalid scopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Integration test\",\n  \"scopes\": [\n    \"admin\", \"admin2\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "createApiKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response body data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Me myself and I\");",
									"    pm.expect(jsonData.active).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Me myself and I\",\n  \"scopes\": [\n    \"admin\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "getApiKeyCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Pagination headers are present\", function () {",
									"    pm.response.to.have.header(\"pagination-count\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys"
							],
							"query": [
								{
									"key": "active",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getApiKeys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check if response is a json array\", () => {",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"});",
									"",
									"pm.test(\"Check if response array size is at least 1\", () => {",
									"    pm.expect(Object.keys(pm.response.json()).length).to.be.above(0);",
									"",
									"    pm.collectionVariables.set(\"apiKeyId\", jsonData[0].key_id);",
									"});",
									"",
									"pm.test(\"Pagination headers are present\", function () {",
									"    pm.response.to.have.header(\"pagination-limit\");",
									"    pm.response.to.have.header(\"pagination-page\");",
									"    pm.response.to.have.header(\"pagination-count\");",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys?page=1&limit=10",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "active",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getApiKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys/{{apiKeyId}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys",
								"{{apiKeyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateToken: name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Familiy administrator\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys/{{apiKeyId}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys",
								"{{apiKeyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateToken: set active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys/{{apiKeyId}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys",
								"{{apiKeyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteApiKey: non existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys/-",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys",
								"-"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteApiKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys/{{apiKeyId}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys",
								"{{apiKeyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllApiKeys",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/api_keys",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"api_keys"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auth/external - external tokens",
			"item": [
				{
					"name": "getExternalSystems",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/external",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external"
							],
							"query": [
								{
									"key": "api_key",
									"value": "foobar",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllExternalAccessTokens",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"my-home5\",\n    \"token\": \"foobar\",\n    \"description\": \"Kusi's HomeAssistant Server\",\n    \"url\": \"http://foobar.local\",\n    \"data\": \"{\\\"whatever\\\": true}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/external",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExternalAccessTokenCount",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExternalAccessTokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}?page=1",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addExternalAccessToken Validation Error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test-ha_12\",\n    \"token\": \"\",\n    \"description\": \"Kusi's HomeAssistant Server\",\n    \"url\": \"ws://foobar.local\",\n    \"data\": \"{\\\"whatever\\\": true}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addExternalAccessToken: auto-generate token_id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"my-home\",\n    \"token\": \"foobar\",\n    \"description\": \"Kusi's HomeAssistant Server\",\n    \"url\": \"http://foobar.local\",\n    \"data\": \"{\\\"whatever\\\": true}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addExternalAccessToken",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token_id\": \"{{extTokenID}}\",\n    \"name\": \"my-home\",\n    \"token\": \"foobar\",\n    \"description\": \"My HomeAssistant Server\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "replaceExternalAccessToken",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"my-new-home\",\n    \"token\": \"foobar-2\",\n    \"description\": \"Kusi's new HomeAssistant Server\",\n    \"url\": \"http://foobar2.local\",\n    \"data\": \"{\\\"whatever\\\": false}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}/{{extTokenID}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}",
								"{{extTokenID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteExternalAccessTokensBySystem",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExternalAccessToken",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}/{{extTokenID}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}",
								"{{extTokenID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteExternalAccessToken",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/auth/external/{{externalSystem}}/{{extTokenID}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"auth",
								"external",
								"{{externalSystem}}",
								"{{extTokenID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "resources",
			"item": [
				{
					"name": "Icon",
					"item": [
						{
							"name": "deleteResources",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/Icons/fox.jpg"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile multiple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/Icons/pizza.jpeg"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/Icons/owl-logo.png"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/Icons/fox2.jpeg"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItemsCount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItems",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"query": [
										{
											"key": "page",
											"value": "5",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "Icon"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BackgroundImage",
					"item": [
						{
							"name": "deleteResources",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/BackgroundImage/testpattern1.jpg"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile multiple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/BackgroundImage/testpattern2.jpg"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/BackgroundImage/testpattern3.jpg"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/BackgroundImage/ambilight.jpg"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItemsCount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItems",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"query": [
										{
											"key": "page",
											"value": "5",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "BackgroundImage"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TvChannelIcon",
					"item": [
						{
							"name": "deleteResources",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/TvChannelIcons/bbc_world_news.png"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile multiple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/TvChannelIcons/mtv.png"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/TvChannelIcons/cnn.png"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Pictures/TvChannelIcons/euronews.png"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItemsCount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItems",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"query": [
										{
											"key": "page",
											"value": "5",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "TvChannelIcon"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Sound",
					"item": [
						{
							"name": "deleteResources",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Sound"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "uploadFile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/mzehnder/Downloads/test.wav"
										}
									]
								},
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Sound"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItemsCount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "Sound"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResourceTypeItems",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"resource_id\", responseJson[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type"
									],
									"query": [
										{
											"key": "page",
											"value": "5",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "Sound"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getResource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "Sound"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteResource",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/resources/:type/:resource",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"resources",
										":type",
										":resource"
									],
									"variable": [
										{
											"key": "type",
											"value": "Sound"
										},
										{
											"key": "resource",
											"value": "{{resource_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getResourceTypes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/resources",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllResources",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/resources",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "mdns",
			"item": [
				{
					"name": "mdns browse all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/test/mdns/discover",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"test",
								"mdns",
								"discover"
							],
							"query": [
								{
									"key": "timeout_browse",
									"value": "1",
									"disabled": true
								},
								{
									"key": "timeout_browse1",
									"value": "1",
									"disabled": true
								},
								{
									"key": "timeout_resolve",
									"value": "1",
									"disabled": true
								},
								{
									"key": "timeout_address",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mdns browse yio-dock-api",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/test/mdns/discover/:query",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"test",
								"mdns",
								"discover",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": "_yio-dock-api._tcp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mdns browse sonos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/test/mdns/discover/:query?timeout_browse=1",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"test",
								"mdns",
								"discover",
								":query"
							],
							"query": [
								{
									"key": "timeout_browse",
									"value": "1"
								},
								{
									"key": "timeout_browse1",
									"value": "1",
									"disabled": true
								},
								{
									"key": "timeout_resolve",
									"value": "1",
									"disabled": true
								},
								{
									"key": "timeout_address",
									"value": "1",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "query",
									"value": "_sonos._tcp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mdns browse yio-remote",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/test/mdns/discover/:query?timeout_browse=1&timeout_browse1=1&timeout_resolve=1&timeout_address=1",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"test",
								"mdns",
								"discover",
								":query"
							],
							"query": [
								{
									"key": "timeout_browse",
									"value": "1"
								},
								{
									"key": "timeout_browse1",
									"value": "1"
								},
								{
									"key": "timeout_resolve",
									"value": "1"
								},
								{
									"key": "timeout_address",
									"value": "1"
								}
							],
							"variable": [
								{
									"key": "query",
									"value": "_yio-remote._tcp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mdns publish",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reg_type\": \"_yio-test._tcp\",\n    \"port\": 1234,\n    \"txt\": {\n        \"foo\": \"bar\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/test/mdns/publish",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"test",
								"mdns",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "mdns unpublish",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/test/mdns/publish/:name",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"test",
								"mdns",
								"publish",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "_yio-test._tcp:1234"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "docks",
			"item": [
				{
					"name": "devices",
					"item": [
						{
							"name": "command",
							"item": [
								{
									"name": "SetLedBrightness",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"SET_LED_BRIGHTNESS\",\n    \"value\": \"66\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Identify",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"IDENTIFY\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "RemoteLowBattery",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"REMOTE_LOW_BATTERY\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "RemoteCharged",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"REMOTE_CHARGED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "SetFriendlyName",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"SET_FRIENDLY_NAME\",\n    \"value\": \"v2-pcb\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Reboot",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"REBOOT\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Reset",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"command\": \"RESET\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/command",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"command"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "infrared",
							"item": [
								{
									"name": "learn",
									"item": [
										{
											"name": "irLearningStatus",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/learn",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"docks",
														"devices",
														":dock_id",
														"ir",
														"learn"
													],
													"variable": [
														{
															"key": "dock_id",
															"value": "YIO-Dock-3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "startIrLearning",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/learn?timeout=10",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"docks",
														"devices",
														":dock_id",
														"ir",
														"learn"
													],
													"query": [
														{
															"key": "timeout",
															"value": "10"
														}
													],
													"variable": [
														{
															"key": "dock_id",
															"value": "YIO-Dock-3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "stopIrLearning",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/learn",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"docks",
														"devices",
														":dock_id",
														"ir",
														"learn"
													],
													"variable": [
														{
															"key": "dock_id",
															"value": "YIO-Dock-3"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "sendIrTest",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/send?base=true&hex=17;0x221C;14;0",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"ir",
												"send"
											],
											"query": [
												{
													"key": "base",
													"value": "true"
												},
												{
													"key": "ext1",
													"value": "true",
													"disabled": true
												},
												{
													"key": "hex",
													"value": "17;0x221C;14;0"
												}
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "sendIrTest Copy 2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/send?base=true&ext1=true&format=PRONTO&code=0000,0070,0000,0032,0080,0040,0010,0010,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0010,0010,0030,0010,0010,0010,0010,0010,0030,0010,0030,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0ace",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"ir",
												"send"
											],
											"query": [
												{
													"key": "base",
													"value": "true"
												},
												{
													"key": "ext1",
													"value": "true"
												},
												{
													"key": "format",
													"value": "PRONTO"
												},
												{
													"key": "code",
													"value": "0000,0070,0000,0032,0080,0040,0010,0010,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0010,0010,0030,0010,0010,0010,0010,0010,0030,0010,0030,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0030,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0010,0030,0010,0010,0010,0ace"
												}
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "sendIrTest hex",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/send?base=true&ext1=true&hex=3;0x20F0B54A;32;0",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"ir",
												"send"
											],
											"query": [
												{
													"key": "base",
													"value": "true"
												},
												{
													"key": "ext1",
													"value": "true"
												},
												{
													"key": "hex",
													"value": "3;0x20F0B54A;32;0"
												}
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "sendIrTest pronto",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/send?base=true&ext1=true&pronto=0001,0002,0002,affe,cafe,beef,dead",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"ir",
												"send"
											],
											"query": [
												{
													"key": "base",
													"value": "true"
												},
												{
													"key": "ext1",
													"value": "true"
												},
												{
													"key": "pronto",
													"value": "0001,0002,0002,affe,cafe,beef,dead"
												},
												{
													"key": "hex",
													"value": "3;0x20F0B54A;32;0",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "sendIr pronto",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"int1\": true,\n    \"int2\": false,\n    \"ext1\": true,\n    \"ext2\": false,\n    \"pronto\":\"0001,0002,0002,affe,cafe,beef,dead\",\n    \"hex2\": \"3;0x20F0B54A;32;0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/ir/send",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"ir",
												"send"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "update",
							"item": [
								{
									"name": "progress",
									"item": [
										{
											"name": "getUpdateProgress",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/docks/devices/:dock_id/update/:update_id",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"docks",
														"devices",
														":dock_id",
														"update",
														":update_id"
													],
													"variable": [
														{
															"key": "dock_id",
															"value": "{{dock_id}}"
														},
														{
															"key": "update_id",
															"value": "{{dock_update_id}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "checkDockFirmwareUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const responseJson = pm.response.json();",
													"postman.setEnvironmentVariable(\"dock_update_id\", responseJson.update_id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/update",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"update"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateDockFirmware",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"const responseJson = pm.response.json();",
													"postman.setEnvironmentVariable(\"dock_update_id\", responseJson.update_id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/update",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"update"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "stopUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/docks/devices/:dock_id/update",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"devices",
												":dock_id",
												"update"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getDock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/devices/:dock_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"devices",
										":dock_id"
									],
									"variable": [
										{
											"key": "dock_id",
											"value": "{{dock_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "connectDock",
							"request": {
								"method": "PUT",
								"header": []
							},
							"response": []
						},
						{
							"name": "disconnectDock",
							"request": {
								"method": "PUT",
								"header": []
							},
							"response": []
						},
						{
							"name": "updateDock",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"friendly_name\": \"YIO-Dock-246F283FCDCC\",\n    \"custom_ws_url\": \"ws://172.16.16.176:946\",\n    \"active\": true,\n    \"description\": \"testing3\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/docks/devices/:dock_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"devices",
										":dock_id"
									],
									"variable": [
										{
											"key": "dock_id",
											"value": "{{dock_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateDock set active",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/docks/devices/:dock_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"devices",
										":dock_id"
									],
									"variable": [
										{
											"key": "dock_id",
											"value": "{{dock_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteDock",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/devices/:dock_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"devices",
										":dock_id"
									],
									"variable": [
										{
											"key": "dock_id",
											"value": "{{dock_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "discover",
					"item": [
						{
							"name": "getDockDiscoveryStatus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"if (responseJson.docks[0]) {",
											"    postman.setEnvironmentVariable(\"discovered_dock_device\", JSON.stringify(responseJson.docks[0]));",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/discover",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"discover"
									]
								}
							},
							"response": []
						},
						{
							"name": "startDockDiscovery",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/discover",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"discover"
									],
									"query": [
										{
											"key": "timeout",
											"value": "5",
											"disabled": true
										},
										{
											"key": "bt",
											"value": "false",
											"disabled": true
										},
										{
											"key": "net",
											"value": "false",
											"disabled": true
										},
										{
											"key": "new",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "stopDockDiscovery",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/discover",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"discover"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "setup",
					"item": [
						{
							"name": "device",
							"item": [
								{
									"name": "getDockSetupStatus",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/docks/setup/:dock_id",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"setup",
												":dock_id"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_setup_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "startDockSetup",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Test station\",\n  \"token\": \"123\",\n  \"custom_ws_url\": \"ws://test-station.local:1946\",\n  \"description\": \"Setup test\",\n  \"wifi\": {\n    \"ssid\": \"My Network\",\n    \"password\": \"0123456789\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/docks/setup/:dock_id",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"setup",
												":dock_id"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_setup_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "stopDockSetup",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/docks/setup/:dock_id",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"docks",
												"setup",
												":dock_id"
											],
											"variable": [
												{
													"key": "dock_id",
													"value": "{{dock_setup_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getDockSetupProcesses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/setup",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"setup"
									]
								}
							},
							"response": []
						},
						{
							"name": "setupDock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"if (responseJson.id) {",
											"    postman.setEnvironmentVariable(\"dock_setup_id\", responseJson.id);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"UC-Dock-E831CDD012A8\",\n    \"configured\": true,\n    \"friendly_name\": \"UC-Dock-E831CDD012A8\",\n    \"address\": \"172.1.1.106:946\",\n    \"model\": \"Remote Two dock\",\n    \"version\": \"0.1.0\",\n    \"discovery_type\": \"NET\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/docks/setup",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"setup"
									]
								}
							},
							"response": []
						},
						{
							"name": "setupDock from discovery",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"",
											"pm.test(\"Check response\", () => {",
											"  pm.expect(responseJson).to.be.an(\"object\");",
											"  pm.expect(responseJson.id).to.be.a(\"string\");",
											"  pm.expect(responseJson.discovery_type).to.be.a(\"string\");",
											"});",
											"",
											"if (responseJson.id) {",
											"    postman.setEnvironmentVariable(\"dock_setup_id\", responseJson.id);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{discovered_dock_device}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/docks/setup",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"setup"
									]
								}
							},
							"response": []
						},
						{
							"name": "stopAllDockSetups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/docks/setup",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"docks",
										"setup"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getDockCount",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/docks",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"docks"
							],
							"query": [
								{
									"key": "active",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getDocks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"if (responseJson[0] && responseJson[0].dock_id) {",
									"    postman.setEnvironmentVariable(\"dock_id\", responseJson[0].dock_id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/docks",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"docks"
							],
							"query": [
								{
									"key": "page",
									"value": "8",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "active",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "connectAllDocks",
					"request": {
						"method": "PUT",
						"header": []
					},
					"response": []
				},
				{
					"name": "disconnectAllDocks",
					"request": {
						"method": "PUT",
						"header": []
					},
					"response": []
				},
				{
					"name": "createDock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"if (responseJson.dock_id) {",
									"    postman.setEnvironmentVariable(\"dock_id\", responseJson.dock_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dock_id\": \"test\",\n    \"custom_ws_url\": \"ws://172.16.16.106:946\",\n    \"token\": \"123\",\n    \"active\": true,\n    \"description\": \"Golden sample\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/docks",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"docks"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllDocks",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/docks",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"docks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "integrations",
			"item": [
				{
					"name": "getIntegrationStatus",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg?page=1&limit=100",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg"
							],
							"query": [
								{
									"key": "enabled",
									"value": "true",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIntegrationDriversCount",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers?enabled=true",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers"
							],
							"query": [
								{
									"key": "enabled",
									"value": "true"
								},
								{
									"key": "instantiable",
									"value": "true",
									"disabled": true
								},
								{
									"key": "single_instance",
									"value": "true",
									"disabled": true
								},
								{
									"key": "has_instances",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIntegrationDrivers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers?page=1&limit=10",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers"
							],
							"query": [
								{
									"key": "enabled",
									"value": "true",
									"disabled": true
								},
								{
									"key": "instantiable",
									"value": "true",
									"disabled": true
								},
								{
									"key": "single_device",
									"value": "false",
									"disabled": true
								},
								{
									"key": "has_instances",
									"value": "false",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIntegrationDriver",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers/:driverId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers",
								":driverId"
							],
							"variable": [
								{
									"key": "driverId",
									"value": "hass"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "registerIntegrationDriver",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"driver_id2\": \"test\",\n    \"name\": {\n        \"de\": \"Testtreiber\",\n        \"en\": \"Test driver\"\n    },\n    \"driver_url\": \"ws://none\",\n    \"version\": \"0.0.1\",\n    \"icon\": \"yio:test\",\n    \"enabled\": true,\n    \"description\": {\n        \"en\": \"Only for testing\",\n        \"de\": \"Nur zum testen\"\n    },\n    \"device_discovery\": false,\n    \"setup_data_schema\": {},\n    \"release_date\": \"2022-04-02\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteIntegrationDriver",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers/:driverId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers",
								":driverId"
							],
							"variable": [
								{
									"key": "driverId",
									"value": "8f7e16af-4092-496f-b90e-2676866aeb09"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startIntegrationDriver",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers/:driverId?cmd=START",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers",
								":driverId"
							],
							"query": [
								{
									"key": "cmd",
									"value": "START"
								}
							],
							"variable": [
								{
									"key": "driverId",
									"value": "hass"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "stopIntegrationDriver",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers/:driverId?cmd=stop",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers",
								":driverId"
							],
							"query": [
								{
									"key": "cmd",
									"value": "stop"
								}
							],
							"variable": [
								{
									"key": "driverId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateIntegrationDriver",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"driver_id\": \"test\",\n    \"name\": {\n        \"en\": \"Test Driver\"\n    },\n    \"driver_url\": \"ws://localhost:8000/ws\",\n    \"version\": \"0.0.1\",\n    \"description\": {\n        \"en\": \"Only for testing\"\n    },\n    \"device_discovery\": false,\n    \"setup_data_schema\": {\n        \"foobar\": \"bar3\",\n        \"foo\": \"bar\",\n        \"bar\": true\n    },\n    \"developer\": {\n        \"name\": \"kusi\"\n    },\n    \"release_date\": \"2022-01-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers/:driverId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers",
								":driverId"
							],
							"variable": [
								{
									"key": "driverId",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createIntegrationInstance",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_id\": \"ä\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/intg/drivers/:driverId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"drivers",
								":driverId"
							],
							"variable": [
								{
									"key": "driverId",
									"value": "simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIntegrationsCount",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances?enabled=true&page=1&limit=1",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances"
							],
							"query": [
								{
									"key": "enabled",
									"value": "true"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIntegrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances?page=1",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances"
							],
							"query": [
								{
									"key": "enabled",
									"value": "true",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIntegration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances/:intgId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances",
								":intgId"
							],
							"variable": [
								{
									"key": "intgId",
									"value": "hass.main"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteIntegration",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances/:intgId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances",
								":intgId"
							],
							"variable": [
								{
									"key": "intgId",
									"value": "test.2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAvailableEntitiesFromIntegration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances/:intgId/entities?page=1&limit=100&reload=true",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances",
								":intgId",
								"entities"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "reload",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "intgId",
									"value": "hass.main"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "configureEntityFromIntegration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/intg/instances/:intgId/entities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances",
								":intgId",
								"entities",
								":entityId"
							],
							"variable": [
								{
									"key": "intgId",
									"value": "hass.main"
								},
								{
									"key": "entityId",
									"value": "sensor.uptime"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "connect",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances/:intgId?cmd=CONNECT",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances",
								":intgId"
							],
							"query": [
								{
									"key": "cmd",
									"value": "CONNECT"
								}
							],
							"variable": [
								{
									"key": "intgId",
									"value": "hass.main"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disconnect",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg/instances/:intgId?cmd=disconnect",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg",
								"instances",
								":intgId"
							],
							"query": [
								{
									"key": "cmd",
									"value": "disconnect"
								}
							],
							"variable": [
								{
									"key": "intgId",
									"value": "test.integration:1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "connectAll",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg?cmd=CONNECT",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg"
							],
							"query": [
								{
									"key": "cmd",
									"value": "CONNECT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "disconnectAll",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/intg?cmd=disconnect",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"intg"
							],
							"query": [
								{
									"key": "cmd",
									"value": "disconnect"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "entities",
			"item": [
				{
					"name": "getEntities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/entities?page=1&limit=100",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"entities"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "entity_type",
									"value": "light",
									"disabled": true
								},
								{
									"key": "intg_id",
									"value": "hass.main",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getEntityCount",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/entities?entity_type=light&intg_id=hass.main",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"entities"
							],
							"query": [
								{
									"key": "entity_type",
									"value": "light"
								},
								{
									"key": "intg_id",
									"value": "hass.main"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getEntity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/entities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"entities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{light_entity_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateEntity",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": { \"en\": \"light {{$randomProductAdjective}}\" },\n    \"icon\": \"uc:{{$randomProductMaterial}}\",\n    \"features\": [\"{{$randomProductAdjective}}\"],\n    \"description\": { \"en\": \"{{$randomLoremSentence}}\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/entities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"entities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{light_entity_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteEntity",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/entities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"entities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "hass.main.sensor.uptime"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "activities",
			"item": [
				{
					"name": "buttons",
					"item": [
						{
							"name": "getActivityButtonMappings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"button\", responseJson[0].button);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/buttons",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"buttons"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "resetActivityButtonMappings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/buttons",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"buttons"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getActivityButtonMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/buttons/:button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"buttons",
										":button"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										},
										{
											"key": "button",
											"value": "{{button}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateActivityButtonMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"long_press\": {\n    \"entity_id\": \"05ba8c78-3104-4d38-945d-02f602ba632c\",\n    \"cmd_id\": \"VOLUME_DOWN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/buttons/:button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"buttons",
										":button"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										},
										{
											"key": "button",
											"value": "{{button}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteActivityButtonMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/buttons/:button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"buttons",
										":button"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										},
										{
											"key": "button",
											"value": "{{button}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ui",
					"item": [
						{
							"name": "pages",
							"item": [
								{
									"name": "page",
									"item": [
										{
											"name": "getActivityUiPage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/activities/:entityId/ui/pages/:page",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"activities",
														":entityId",
														"ui",
														"pages",
														":page"
													],
													"variable": [
														{
															"key": "entityId",
															"value": "{{activity_id}}"
														},
														{
															"key": "page",
															"value": "main"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "updateActivityUiPage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test page\",\n    \"items\": [\n        {\n            \"type\": \"icon\",\n            \"icon\": \"uc:star\",\n            \"location\": {\n                \"x\": 2,\n                \"y\": 5\n            },\n            \"size\": {\n                \"width\": 2,\n                \"height\": 1\n            }\n        },\n        {\n            \"type\": \"text\",\n            \"text\": \"TEST\",\n            \"command\": {\n                \"entity_id\": \"05ba8c78-3104-4d38-945d-02f602ba632c\",\n                \"cmd_id\": \"VOLUME_UP\"\n            },\n            \"location\": {\n                \"x\": 0,\n                \"y\": 0\n            }\n        },\n        {\n            \"type\": \"text\",\n            \"text\": \"Toggle\",\n            \"command\": {\n                \"cmd_id\": \"light.toggle\",\n                \"entity_id\": \"hass.main.light.study_reading_light\"\n            },\n            \"location\": {\n                \"x\": 0,\n                \"y\": 0\n            },\n            \"size2\":{\"height\":6,\"width\":4}\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{SERVER}}/api/activities/:entityId/ui/pages/:page",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"activities",
														":entityId",
														"ui",
														"pages",
														":page"
													],
													"variable": [
														{
															"key": "entityId",
															"value": "{{activity_id}}"
														},
														{
															"key": "page",
															"value": "main"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "deleteActivityUiPage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/activities/:entityId/ui/pages/:page",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"activities",
														":entityId",
														"ui",
														"pages",
														":page"
													],
													"variable": [
														{
															"key": "entityId",
															"value": "{{activity_id}}"
														},
														{
															"key": "page",
															"value": "main"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "createActivityUiPage",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/activities/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"activities",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{activity_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getActivityUiPages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/activities/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"activities",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{activity_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateActivityUiPageOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"page_order\": [\"b99a3a0a-6859-4810-aae9-eff31043b980\", \"main\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/activities/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"activities",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{activity_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "resetActivityUiPages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/activities/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"activities",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{activity_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getActivityUi",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/ui",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"ui"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteActivityUi",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/activities/:entityId/ui",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"activities",
										":entityId",
										"ui"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{activity_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getActivityCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"pagination-count header is present\", function () {",
									"    pm.response.to.have.header(\"pagination-count\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/activities",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "getActivities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"activity_id\", responseJson[0].entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/activities?page=1&limit=100",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createActivity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"activity_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} starts home office\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/activities",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllActivities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/activities",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "getActivity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/activities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{activity_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateActivity with included entities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"entity_ids\": [\n            \"hass.main.sensor.uptime\",\n            \"hass.main.light.study_reading_light\"\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/activities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{activity_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateActivity with included entities Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"entity_ids\": [\n            \"hass.main.sensor.uptime\",\n            \"hass.main.light.study_reading_light\",\n            \"05ba8c78-3104-4d38-945d-02f602ba632c\"\n        ],\n        \"sequences\": {\n            \"off\": [],\n            \"on\": [\n                {\n                    \"type\": \"command\",\n                    \"command\": {\n                        \"entity_id\": \"hass.main.light.study_reading_light\",\n                        \"cmd_id\": \"light.on\"\n                    }\n                },\n                {\n                    \"type\": \"delay\",\n                    \"delay\": 400\n                },\n                {\n                    \"command\": {\n                        \"cmd_id\": \"light.off\",\n                        \"entity_id\": \"hass.main.light.study_reading_light\"\n                    },\n                    \"type\": \"command\"\n                },\n                {\n                    \"command\": {\n                        \"cmd_id\": \"CHANNEL_DOWN\",\n                        \"entity_id\": \"05ba8c78-3104-4d38-945d-02f602ba632c\"\n                    },\n                    \"type\": \"command\"\n                }\n            ]\n        }\n\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/activities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{activity_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateActivity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name2\": {\n        \"en\": \"light {{$randomProductAdjective}}\"\n    },\n    \"icon\": \"uc:{{$randomProductMaterial}}\",\n    \"description\": {\n        \"en\": \"{{$randomLoremSentence}}\"\n    },\n    \"options\": {\n        \"entity_ids\": [\n            \"hass.main.light.study_reading_light\"\n        ],\n        \"sequences\": {\n            \"off\": [],\n            \"on\": [\n                {\n                    \"type\": \"command\",\n                    \"command\": {\n                        \"entity_id\": \"hass.main.light.study_reading_light\",\n                        \"cmd_id\": \"light.on\"\n                    }\n                },\n                {\n                    \"type\": \"delay\",\n                    \"delay\": 400\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/activities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{activity_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteActivity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/activities/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"activities",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{activity_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "macros",
			"item": [
				{
					"name": "getMacroCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"pagination-count header is present\", function () {",
									"    pm.response.to.have.header(\"pagination-count\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/macros",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMacros",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"macro_id\", responseJson[0].entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/macros?page=1&limit=100",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createMacro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"macro_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} comes home\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMacro with entities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"macro_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} comes home\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    },\n    \"options\": {\n        \"entity_ids\": [ \"88567410-e60a-496d-9e2f-53abd2eba81e\" ]\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMacro clone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"macro_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} comes home\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    },\n    \"clone_from\": \"88567410-e60a-496d-9e2f-53abd2eba81e\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllMacros",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/macros",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMacro",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/macros/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{macro_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMacro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": { \"en\": \"macro {{$randomProductAdjective}}\" },\n    \"icon\": \"uc:{{$randomProductMaterial}}\",\n    \"description\": { \"en\": \"{{$randomLoremSentence}}\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{macro_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMacro sequence invalid entity",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"sequence\": [\n            {\n                \"type\": \"command\",\n                \"command\": {\n                    \"entity_id\": \"foobar\",\n                    \"cmd_id\": \"stop\"\n                }\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{macro_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMacro sequence",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"sequence\": [\n            {\n                \"type\": \"command\",\n                \"command\": {\n                    \"entity_id\": \"{{remote_id}}\",\n                    \"cmd_id\": \"remote.on\"\n                }\n            },\n            {\n                \"type\": \"delay\",\n                \"delay\": 400\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{macro_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMacro included_entities",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"entity_ids\": [\"{{remote_id}}\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/macros/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{macro_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMacro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/macros/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"macros",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{macro_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "remotes",
			"item": [
				{
					"name": "ir",
					"item": [
						{
							"name": "getRemoteIrDataSet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ir",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ir"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getRemoteIrCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ir/:cmdId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ir",
										":cmdId"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "cmdId",
											"value": "BACK"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateRemoteIrCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"0000,006e,0022,0002,0155,00ac,0015,0015,0015,0041,0015,0041,0015,0041,0015,0015,0015,0041,0015,0041,0015,0041,0015,0041,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0015,0015,0041,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0041,0015,0015,0015,0015,0015,05e4,0155,0055,0015,0e40\",\n    \"format\": \"PRONTO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ir/:cmdId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ir",
										":cmdId"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "cmdId",
											"value": "BACK"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addRemoteIrCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"0000,006e,0022,0002,0155,00ac,0015,0015,0015,0041,0015,0041,0015,0041,0015,0015,0015,0041,0015,0041,0015,0041,0015,0041,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0015,0015,0041,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0041,0015,0015,0015,0015,0015,05e4,0155,0055,0015,0e40\",\n    \"format\": \"PRONTO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ir/:cmdId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ir",
										":cmdId"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "cmdId",
											"value": "TEST"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addRemoteIrCode Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"0000,006e,0022,0002,0155,00ac,0015,0015,0015,0041,0015,0041,0015,0041,0015,0015,0015,0041,0015,0041,0015,0041,0015,0041,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0015,0015,0041,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0041,0015,0041,0015,0015,0015,0015,0015,0015,0015,0041,0015,0015,0015,0015,0015,05e4,0155,0055,0015,0e40\",\n    \"format\": \"PRONTO\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ir/:cmdId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ir",
										":cmdId"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "cmdId",
											"value": "TEST"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteOrResetRemoteIrCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ir/:cmdId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ir",
										":cmdId"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "cmdId",
											"value": "BACK"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "buttons",
					"item": [
						{
							"name": "getRemoteButtonMappings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"button\", responseJson[0].button);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/buttons",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"buttons"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "resetRemoteButtonMappings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/buttons",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"buttons"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getRemoteButtonMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/buttons/:button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"buttons",
										":button"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "button",
											"value": "{{button}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateRemoteButtonMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"short_press\": {\n    \"cmd_id\": \"BACK\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/buttons/:button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"buttons",
										":button"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "button",
											"value": "{{button}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteRemoteButtonMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/buttons/:button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"buttons",
										":button"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										},
										{
											"key": "button",
											"value": "{{button}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ui",
					"item": [
						{
							"name": "pages",
							"item": [
								{
									"name": "page",
									"item": [
										{
											"name": "getRemoteUiPage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages/:page",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"remotes",
														":entityId",
														"ui",
														"pages",
														":page"
													],
													"variable": [
														{
															"key": "entityId",
															"value": "{{remote_id}}"
														},
														{
															"key": "page",
															"value": "main"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "updateRemoteUiPage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Test page\",\n    \"items\": [\n        {\n            \"type\": \"icon\",\n            \"icon\": \"uc:star\",\n            \"location\": {\n                \"x\": 1,\n                \"y\": 0\n            },\n            \"size\": {\n                \"width\": 2\n            }\n        },\n        {\n            \"type\": \"text\",\n            \"text\": \"OK\",\n            \"command\": {\n                \"cmd_id\": \"BACK\"\n            },\n            \"location\": {\n                \"x\": 3,\n                \"y\": 5\n            },\n            \"size\": {\n                \"width\": 1,\n                \"height\": 1\n            }\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages/:page",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"remotes",
														":entityId",
														"ui",
														"pages",
														":page"
													],
													"variable": [
														{
															"key": "entityId",
															"value": "{{remote_id}}"
														},
														{
															"key": "page",
															"value": "main"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "deleteRemoteUiPage",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages/:page",
													"host": [
														"{{SERVER}}"
													],
													"path": [
														"api",
														"remotes",
														":entityId",
														"ui",
														"pages",
														":page"
													],
													"variable": [
														{
															"key": "entityId",
															"value": "{{remote_id}}"
														},
														{
															"key": "page",
															"value": "main"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "createRemoteUiPage",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"remotes",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{remote_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getRemoteUiPages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"remotes",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{remote_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateRemoteUiPageOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"page_order\": [\"b99a3a0a-6859-4810-aae9-eff31043b980\", \"main\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"remotes",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{remote_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "resetRemoteUiPages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/remotes/:entityId/ui/pages",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"remotes",
												":entityId",
												"ui",
												"pages"
											],
											"variable": [
												{
													"key": "entityId",
													"value": "{{remote_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getRemoteUi",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ui",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ui"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteRemoteUi",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/remotes/:entityId/ui",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"remotes",
										":entityId",
										"ui"
									],
									"variable": [
										{
											"key": "entityId",
											"value": "{{remote_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getRemoteCount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"pagination-count header is present\", function () {",
									"    pm.response.to.have.header(\"pagination-count\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRemotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"remote_id\", responseJson[0].entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/remotes?page=1&limit=100",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createRemote with IR codeset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"remote_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} super remote\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    },\n    \"codeset_id\": \"lg1\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "createRemote with custom IR codeset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"remote_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} super remote\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    },\n    \"codeset_id\": \"4bb87320-2025-4483-83e9-7aac07a26943\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "createRemote with custom codeset - minimal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"remote_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} super remote\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    },\n    \"custom_codeset\": {\n        \"device_name\": \"My device\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "createRemote with custom codeset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"remote_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} super remote\"\n    },\n    \"icon\": \"uc:{{$randomColor}}\",\n    \"description\": {\n        \"en\": \"{{$randomCatchPhrase}}\"\n    },\n    \"custom_codeset\": {\n        \"manufacturer_id\": \"custom\",\n        \"device_name\": \"My new TV\",\n        \"device_type\": \"television\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "createRemote clone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"//postman.setEnvironmentVariable(\"remote_id\", responseJson.entity_id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"remote\", pm.environment.get(\"remote_id\"));",
									";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"{{$randomFirstName}} clone remote\"\n    },\n    \"clone_from\": \"{{remote}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllRemotes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/remotes",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRemote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/remotes/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{remote_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateRemote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"en\": \"macro {{$randomProductAdjective}}\"\n    },\n    \"icon\": \"uc:{{$randomProductMaterial}}\",\n    \"description\": {\n        \"en\": \"{{$randomLoremSentence}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{remote_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateRemote Emitter output",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"ir\": {\n            \"output\": {\n                \"device_id\": \"sim.1\",\n                \"port_id\": \"4\"\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{remote_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateRemote IR codeset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": {\n        \"ir\": {\n            \"codeset\": {\n                \"id\": \"lg1\"\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/remotes/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{remote_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteRemote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/remotes/:entityId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"remotes",
								":entityId"
							],
							"variable": [
								{
									"key": "entityId",
									"value": "{{remote_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "profiles",
			"item": [
				{
					"name": "groups - default profile",
					"item": [
						{
							"name": "getGroupsInProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"group_id\", responseJson[0].group_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups?pin=1",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups"
									],
									"query": [
										{
											"key": "pin",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"group_id\", responseJson.group_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomCity}}\",\n    \"icon\": \"yio:test\",\n    \"entities\": [\n        \"light40\",\n        \"light41\",\n        \"light42\"\n    ],\n    \"description\": \"Just a test\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createGroup duplicate entity_id",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Unique entity_id test\",\n    \"icon\": \"yio:test\",\n    \"entities\": [\n        \"light40\",\n        \"light40\",\n        \"light42\"\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateGroup",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Renamed\",\n    \"icon\": \"yio:owl\",\n    \"description\": \"This is a description\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups/:group_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups",
										":group_id"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										},
										{
											"key": "group_id",
											"value": "{{group_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateGroup with Entities",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"yio:owl\",\n    \"entities\": [\n        \"light43\",\n        \"light42\",\n        \"light41\"\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups/:group_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups",
										":group_id"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										},
										{
											"key": "group_id",
											"value": "{{group_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "pages - default profile",
					"item": [
						{
							"name": "getPagesInProfile",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages?pin=1",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages"
									],
									"query": [
										{
											"key": "pin",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"page_id\", responseJson.page_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomCity}}\",\n    \"items\": [\n        {\n            \"entity_id\": \"switch1\"\n        },\n        {\n            \"entity_id\": \"mediaplayer1\"\n        },\n        {\n            \"entity_id\": \"blind1\"\n        },\n        {\n            \"entity_id\": \"light10\"\n        },\n        {\n            \"group_id\": \"def:g3\"\n        },\n        {\n            \"group_id\": \"def:g2\"\n        },\n        {\n            \"group_id\": \"def:g1\"\n        }\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getPage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages/:pageId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										},
										{
											"key": "pageId",
											"value": "{{page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updatePage",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomBsBuzz}}\",\n    \"image\": \"img:bedroom\",\n    \"items\": [\n        {\n            \"entity_id\": \"switch1\"\n        },\n        {\n            \"group_id\": \"def:g3\"\n        },\n        {\n            \"entity_id\": \"blind1\"\n        },\n        {\n            \"entity_id\": \"light10\"\n        },\n        {\n            \"group_id\": \"def:g2\"\n        },\n        {\n            \"entity_id\": \"mediaplayer1\"\n        },\n        {\n            \"group_id\": \"def:g1\"\n        }\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages/:pageId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										},
										{
											"key": "pageId",
											"value": "{{page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deletePage",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages/:pageId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "default"
										},
										{
											"key": "pageId",
											"value": "{{page_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "groups",
					"item": [
						{
							"name": "getGroupsInProfile",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups?pin=1",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups"
									],
									"query": [
										{
											"key": "pin",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"group_id\", responseJson.group_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test\",\n    \"icon\": \"yio:test\",\n    \"entities\": [\n        \"light40\",\n        \"light41\",\n        \"light42\"\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createGroup duplicate entity_id",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Unique entity_id test\",\n    \"icon\": \"yio:test\",\n    \"entities\": [\n        \"light40\",\n        \"light40\",\n        \"light42\"\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateGroup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomBsBuzz}}\",\n    \"icon\": \"yio:owl\",\n   \"entities\": [\n        \"light43\",\n        \"light42\",\n        \"light41\"\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups/:group_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups",
										":group_id"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										},
										{
											"key": "group_id",
											"value": "{{group_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateGroup with duplicate entities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"yio:owl\",\n    \"entities\": [\n        \"light43\",\n        \"light42\",\n        \"light42\"\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/groups/:group_id",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"groups",
										":group_id"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										},
										{
											"key": "group_id",
											"value": "{{group_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "pages",
					"item": [
						{
							"name": "getPagesInProfile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages?pin=1",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages"
									],
									"query": [
										{
											"key": "pin",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"page_id\", responseJson.page_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomProductName}}\",\n    \"items\": [\n        {\n            \"entity_id\": \"switch1\"\n        },\n        {\n            \"entity_id\": \"mediaplayer1\"\n        },\n        {\n            \"group_id\": \"{{group_id}}\"\n        },\n        {\n            \"entity_id\": \"blind1\"\n        },\n        {\n            \"entity_id\": \"{{light_entity_id}}\"\n        }\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages/:pageId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										},
										{
											"key": "pageId",
											"value": "{{page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updatePage",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomBsBuzz}}\",\n    \"items\": [\n        {\n            \"entity_id\": \"switch1\"\n        },\n        {\n            \"entity_id\": \"mediaplayer1\"\n        },\n        {\n            \"entity_id\": \"blind1\"\n        },\n        {\n            \"entity_id\": \"{{light_entity_id}}\"\n        },\n        {\n            \"group_id\": \"{{group_id}}\"\n        }\n    ]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages/:pageId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										},
										{
											"key": "pageId",
											"value": "{{page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deletePage",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/profiles/:profile/pages/:pageId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"profiles",
										":profile",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "pin",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "profile",
											"value": "{{profile_id}}"
										},
										{
											"key": "pageId",
											"value": "{{page_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getProfiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"profile_id\", responseJson[0].profile_id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/profiles",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles"
							],
							"query": [
								{
									"key": "active",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "switchProfiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/profiles?active_profile_id=default",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles"
							],
							"query": [
								{
									"key": "active_profile_id",
									"value": "default"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"postman.setEnvironmentVariable(\"profile_id\", responseJson.profile_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFirstName}}\",\n    \"icon\": \"yio:{{$randomColor}}\",\n    \"description\": \"{{$randomCatchPhrase}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/profiles",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test\",\n    \"icon\": \"yio:rocket\",\n    \"description\": \"just testing\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/profiles/:profile",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles",
								":profile"
							],
							"variable": [
								{
									"key": "profile",
									"value": "{{profile_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFirstName}}\",\n    \"icon\": \"uc:panda\",\n    \"update_pin\": false,\n    \"description\": \"update test\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/profiles/:profileId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profile_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateProfile page order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Kusi\",\n  \"update_pin\": false,\n  \"pages\": [\n    \"33f0c925-8af6-4a98-a145-2ab17d73475c\",\n    \"2f713a9c-2baf-4f75-96e6-393a4dfce5b1\",\n    \"68cafdfb-45f0-4c98-929d-bafc5f0dd878\",\n    \"c897877b-547c-4a9c-ac25-9462c7aa47f1\",\n    \"2c4cb919-7d32-40bf-b9bd-d5619dd1367d\"\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/profiles/:profileId",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profile_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test\",\n    \"icon\": \"yio:rocket\",\n    \"description\": \"just testing\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}/api/profiles/:profile",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles",
								":profile"
							],
							"variable": [
								{
									"key": "profile",
									"value": "{{profile_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllProfiles !!! WARNING !!!",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/profiles",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cfg",
			"item": [
				{
					"name": "button",
					"item": [
						{
							"name": "getButtonSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"button"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateButtonSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"brightness\": 33,\n    \"auto_brightness\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/button",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"button"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "device",
					"item": [
						{
							"name": "getDeviceSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/device",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"device"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateDeviceSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test device\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/device",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "getDeviceButtonLayout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/device/button_layout",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"device",
										"button_layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "getDeviceIconMapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/device/icon_mapping",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"device",
										"icon_mapping"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "display",
					"item": [
						{
							"name": "getDisplaySettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/display",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"display"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateDisplaySettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"brightness\": 30,\n    \"auto_brightness\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/display",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"display"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "entity",
					"item": [
						{
							"name": "getEntityCommandMetadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/entity/commands",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"entity",
										"commands"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "haptic",
					"item": [
						{
							"name": "getHapticSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/haptic",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"haptic"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateHapticSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/haptic",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"haptic"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "localization",
					"item": [
						{
							"name": "getLocalizationSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/localization",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"localization"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getTimeZoneNames",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/localization/tz_names",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"localization",
										"tz_names"
									]
								}
							},
							"response": []
						},
						{
							"name": "getLocalizationCountries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/localization/countries",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"localization",
										"countries"
									]
								}
							},
							"response": []
						},
						{
							"name": "getTranslations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/localization/translations",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"localization",
										"translations"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateLocalizationSettings",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"language_code\": \"de_CH\",\n    \"country_code\": \"CH\",\n    \"time_zone\": \"Europe/Zurich\",\n    \"time_format_24h\": true,\n    \"measurement_unit\": \"METRIC\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/localization",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"localization"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "network",
					"item": [
						{
							"name": "getNetworkSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/network",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"network"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateNetworkSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bt_enabled\": true,\n    \"wifi_enabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/network",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"network"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "power_saving",
					"item": [
						{
							"name": "getPowerSavingSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/power_saving",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"power_saving"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updatePowerSavingSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"wakeup_sensitivity\": 2,\n    \"display_off_sec\": 5,\n    \"standby_sec\": 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/power_saving",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"power_saving"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "software_update",
					"item": [
						{
							"name": "getSoftwareUpdateSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/software_update",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"software_update"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateSoftwareUpdateSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"check_for_updates\": false,\n    \"auto_update\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/software_update",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"software_update"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "sound",
					"item": [
						{
							"name": "getSoundSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/sound",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"sound"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "updateSoundSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false,\n    \"volume\": 30\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/sound",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"sound"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "voice_control",
					"item": [
						{
							"name": "getVoiceControlSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/voice_control",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"voice_control"
									],
									"query": [
										{
											"key": "default",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getVoiceAssistants",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/cfg/voice_control/voice_assistants",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"voice_control",
										"voice_assistants"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateVoiceControlSettings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"microphone\": true,\n    \"enabled\": true,\n    \"voice_assistant\": \"None\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER}}/api/cfg/voice_control",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"cfg",
										"voice_control"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "getAllSettings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/cfg",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"cfg"
							]
						}
					},
					"response": []
				},
				{
					"name": "resetAllSettings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/cfg",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"cfg"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "system",
			"item": [
				{
					"name": "getSystemInformation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/system",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"system"
							]
						}
					},
					"response": []
				},
				{
					"name": "executeSystemCommand",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/system?cmd=RESTART",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"system"
							],
							"query": [
								{
									"key": "cmd",
									"value": "RESTART"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getFactoryResetToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/system/factory_reset",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"system",
								"factory_reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "performFactoryReset",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/api/system/factory_reset?token=1.2.3",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"api",
								"system",
								"factory_reset"
							],
							"query": [
								{
									"key": "token",
									"value": "1.2.3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ir",
			"item": [
				{
					"name": "codes",
					"item": [
						{
							"name": "manufacturers",
							"item": [
								{
									"name": "search",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/manufacturers?q=lg",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"manufacturers"
											],
											"query": [
												{
													"key": "q",
													"value": "lg"
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "100",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "codeSetSearch",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/manufacturers/:manufacturer_id?q=tv",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"manufacturers",
												":manufacturer_id"
											],
											"query": [
												{
													"key": "q",
													"value": "tv"
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "1",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "manufacturer_id",
													"value": "lg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getCodeSet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/manufacturers/:manufacturer_id/:codeset",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"manufacturers",
												":manufacturer_id",
												":codeset"
											],
											"variable": [
												{
													"key": "manufacturer_id",
													"value": "lg"
												},
												{
													"key": "codeset",
													"value": "lg1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "custom",
							"item": [
								{
									"name": "getCodeSetCount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "HEAD",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom"
											]
										}
									},
									"response": []
								},
								{
									"name": "getCodeSets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const responseJson = pm.response.json();",
													"postman.setEnvironmentVariable(\"device_id\", responseJson[0].device_id);",
													"postman.setEnvironmentVariable(\"device_name\", responseJson[0].device);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom?page=1&limit=10",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "createCodeSet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"const responseJson = pm.response.json();",
													"postman.setEnvironmentVariable(\"device_id\", responseJson.device_id);",
													"postman.setEnvironmentVariable(\"device_name\", responseJson.device);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"manufacturer\": \"Denon\",\n    \"device\": \"AVR-X2700\",\n    \"device_type\": \"receiver2\",\n    \"code_format\": \"PRONTO\",\n    \"codes\": [\n        {\n            \"key\": \"POWER_ON\",\n            \"value\": \"0000 006d 0000 0024 0157 00ac 0015,0015,0015,0015,0015,0040,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0015,0040,0015,0040,0015,0015,0015,0040,0015,0040,0015,0040,0015,0040,0015,0040,0015,0015,0015,0015,0015,0040,0015,0015,0015,0015,0015,0015,0015,0040,0015,0040,0015,0040,0015,0040,0015,0015,0015,0040,0015,0040,0015,0040,0015,0015,0015,0015,0015,0689,0157,0056,0015,0e94\"\n        },\n        {\n            \"key\": \"POWER_OFF\",\n            \"value\": \"0000,006d,0000,0024,0157,00ab,0015,0015,0016,0015,0016,003f,0016,0015,0015,0016,0015,0015,0016,0015,0016,0015,0015,0040,0015,0040,0015,0015,0016,003f,0016,003f,0016,003f,0016,003f,0016,003f,0016,003f,0016,0015,0016,003f,0016,0015,0015,0015,0016,0015,0016,003f,0016,003f,0016,0015,0015,0040,0015,0015,0016,003f,0016,003f,0016,003f,0016,0015,0016,0015,0015,05fd,0156,0055,0016,0ee1\"\n        },\n        {\n            \"key\": \"VOLUME_UP\",\n            \"value\": \"0000,006c,0022,0002,015b,00ad,0016,0016,0016,0016,0016,0041,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0041,0016,0041,0016,0016,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,0016,0016,0041,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0041,0016,0016,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,05f7,015b,0057,0016,0e6c\"\n        },\n        {\n            \"key\": \"VOLUME_DOWN\",\n            \"value\": \"0000,006c,0022,0002,015b,00ad,0016,0016,0016,0016,0016,0041,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0041,0016,0041,0016,0016,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,0041,0016,05f7,015b,0057,0016,0e6c\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateCodeSet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"device\": \"AVR-X2700\",\n    \"device_type\": \"receiver\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getCodeSet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteCodeSet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteAllCodeSets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom"
											]
										}
									},
									"response": []
								},
								{
									"name": "addKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"format\": \"PRONTO\",\n    \"value\": \"0000,0068,0000,0010,0060,0018,0018,0018,0018,0018,0030,0018,0030,0018,0030,0018,0030,0018,0018,0018,0030,0018,0030,0018,0018,0018,0018,0018,0030,0018,0030,0018,0018,0018,0018,0318\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset/:key",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset",
												":key"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												},
												{
													"key": "key",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset/:key",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset",
												":key"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												},
												{
													"key": "key",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "updateCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"format\": \"PRONTO\",\n    \"value\": \"0000,0068,0000,0010,0060,0018,0018,0018,0018,0018,0030,0018,0030,0018,0030,0018,0030,0018,0018,0018,0030,0018,0030,0018,0018,0018,0018,0018,0030,0018,0030,0018,0018,0018,0018,0318\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset/:key",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset",
												":key"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												},
												{
													"key": "key",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/codes/custom/:codeset/:key",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"codes",
												"custom",
												":codeset",
												":key"
											],
											"variable": [
												{
													"key": "codeset",
													"value": "{{device_id}}"
												},
												{
													"key": "key",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "emitters",
					"item": [
						{
							"name": "learn",
							"item": [
								{
									"name": "getLearningStatus",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/emitters/:emitterId/learn",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"emitters",
												":emitterId",
												"learn"
											],
											"variable": [
												{
													"key": "emitterId",
													"value": "{{emitter_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "startLearning",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/emitters/:emitterId/learn?timeout=10",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"emitters",
												":emitterId",
												"learn"
											],
											"query": [
												{
													"key": "timeout",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "emitterId",
													"value": "{{emitter_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "stopLearning",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{SERVER}}/api/ir/emitters/:emitterId/learn",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"emitters",
												":emitterId",
												"learn"
											],
											"query": [
												{
													"key": "active",
													"value": "true",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "emitterId",
													"value": "{{emitter_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "send",
							"item": [
								{
									"name": "sendCommandOnEmitter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"codeset_id\": \"sony1\",\n  \"cmd_id\": \"MUTE\",\n  \"port_id\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/ir/emitters/:deviceId/send",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"emitters",
												":deviceId",
												"send"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "{{emitter_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "sendCommandOnEmitter default port",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"codeset_id\": \"lg1\",\n  \"cmd_id\": \"POWER_ON\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{SERVER}}/api/ir/emitters/:deviceId/send",
											"host": [
												"{{SERVER}}"
											],
											"path": [
												"api",
												"ir",
												"emitters",
												":deviceId",
												"send"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "{{emitter_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getEmitterCount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"pagination-count header is present\", function () {",
											"    pm.response.to.have.header(\"pagination-count\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/ir/emitters",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"ir",
										"emitters"
									],
									"query": [
										{
											"key": "active",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getEmitters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const responseJson = pm.response.json();",
											"postman.setEnvironmentVariable(\"emitter_id\", responseJson[0].device_id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/ir/emitters?active=true",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"ir",
										"emitters"
									],
									"query": [
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "page",
											"value": "3",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getEmitter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{SERVER}}/api/ir/emitters/:emitterId",
									"host": [
										"{{SERVER}}"
									],
									"path": [
										"api",
										"ir",
										"emitters",
										":emitterId"
									],
									"query": [
										{
											"key": "active",
											"value": "true",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "emitterId",
											"value": "{{emitter_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "WebSocket",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SERVER}}/ws",
					"host": [
						"{{SERVER}}"
					],
					"path": [
						"ws"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "SERVER",
			"value": "http://localhost:{{http_port}}"
		},
		{
			"key": "externalSystem",
			"value": "homeassistant"
		},
		{
			"key": "apiPassword",
			"value": "SET_PWD_IN_CURRENT_VALUE"
		},
		{
			"key": "extTokenID",
			"value": "test-1"
		},
		{
			"key": "http_port",
			"value": "8080"
		},
		{
			"key": "https_port",
			"value": "8443"
		},
		{
			"key": "apiKeyId",
			"value": "SET_KEY_IN_CURRENT_VALUE",
			"type": "string"
		},
		{
			"key": "remote_id",
			"value": ""
		},
		{
			"key": "remote",
			"value": ""
		}
	]
}